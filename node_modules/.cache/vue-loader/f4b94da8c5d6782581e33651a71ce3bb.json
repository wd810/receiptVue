{"remainingRequest":"/Users/wangdian/Documents/Python/receiptVue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/wangdian/Documents/Python/receiptVue/src/components/Upload.vue?vue&type=style&index=0&id=44fc689e&lang=css","dependencies":[{"path":"/Users/wangdian/Documents/Python/receiptVue/src/components/Upload.vue","mtime":1651460147205},{"path":"/Users/wangdian/Documents/Python/receiptVue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangdian/Documents/Python/receiptVue/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1628298225000},{"path":"/Users/wangdian/Documents/Python/receiptVue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/wangdian/Documents/Python/receiptVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangdian/Documents/Python/receiptVue/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgojdXBsb2FkIHsKICAgIG9wYWNpdHk6IDA7Cn0KCiN1cGxvYWQtbGFiZWwgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiA1MCU7CiAgICBsZWZ0OiAxcmVtOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOwp9CgouaW1hZ2UtYXJlYSB7CiAgICBib3JkZXI6IDJweCBkYXNoZWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOwogICAgcGFkZGluZzogMXJlbTsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLmltYWdlLWFyZWE6OmJlZm9yZSB7CiAgICBjb250ZW50OiAnVXBsb2FkZWQgaW1hZ2UgcmVzdWx0JzsKICAgIGNvbG9yOiAjZmZmOwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiA1MCU7CiAgICBsZWZ0OiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICAgIGZvbnQtc2l6ZTogMC44cmVtOwogICAgei1pbmRleDogMTsKfQoKLmltYWdlLWFyZWEgaW1nIHsKICAgIHotaW5kZXg6IDI7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCmJvZHkgewogICAgbWluLWhlaWdodDogMTAwdmg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzU3ZjlhOwogICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE0N2RlZywgIzc1N2Y5YSAwJSwgI2Q3ZGRlOCAxMDAlKTsKfQoKCg=="},{"version":3,"sources":["/Users/wangdian/Documents/Python/receiptVue/src/components/Upload.vue"],"names":[],"mappings":"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","file":"/Users/wangdian/Documents/Python/receiptVue/src/components/Upload.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"container py-5\">\n\n    <!-- For demo purpose -->\n    <header class=\"text-white text-center\">\n        <p class=\"lead mb-0\">Upload Receipt</p>\n    </header>\n\n    <div class=\"row py-4\">\n        <div class=\"col-lg-6 mx-auto\">\n\n            <!-- Upload image input-->\n            <div class=\"input-group mb-3 px-2 py-2 rounded-pill bg-white shadow-sm\">\n                <input id=\"upload\" type=\"file\" @change=\"readURL\" class=\"form-control border-0\">\n                <label id=\"upload-label\" for=\"upload\" class=\"font-weight-light text-muted\">Choose file</label>\n                <div class=\"input-group-append\">\n                    <label for=\"upload\" class=\"btn btn-light m-0 rounded-pill px-4\"> <i class=\"fa fa-cloud-upload mr-2 text-muted\"></i><small class=\"text-uppercase font-weight-bold text-muted\">Choose file</small></label>\n                </div>\n            </div>\n            \n            <div class=\"col-lg-12 row\">\n                <!-- Uploaded image area-->\n                <div class=\"col-lg-6\">\n                    <p class=\"font-italic text-white text-center\">The image uploaded: {{imgName}}</p>\n                    <div class=\"image-area mt-4\"><img id=\"imageResult\" :src=\"imgSrc\" alt=\"\" class=\"img-fluid rounded shadow-sm mx-auto d-block\"></div>\n                    <button type=\"button\" class=\"btn\" :class=\"fileEmpty ? 'btn-danger' : 'btn-primary'\" @click=\"postImg\">Submit</button>\n                    <i v-show=\"fileEmpty\">Please Upload an Image</i>\n                </div>\n\n                <!-- extract information area -->\n                <div class=\"col-lg-6\" v-if=\"!showSpin\">\n                    <p class=\"font-italic text-white text-center\">Extraction Result</p>\n                    <div v-if=\"response.date\">\n                        <p>purchase date: {{response.date}}</p>\n                        <p>supplier: {{response.supplier}}</p>\n                        <p>total: {{response.total}}</p>\n                        <p>subtotal: {{response.subtotal}}</p>\n                        <p>hst: {{response.hst}}</p>\n                    </div>\n                    <div v-if=\"response.data\">\n                        <p>{{ response.data }}</p>\n                    </div>\n                </div>\n                <!-- spinning area -->\n                <div class=\"spinner-border\" role=\"status\" v-if=\"showSpin\">\n                    <span class=\"sr-only\"></span>\n                </div>\n                \n            </div>\n            \n        </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n  name: \"upload\",\n  data() {\n    return {\n      selectedImg: null,\n      fileEmpty: false,\n      imgName: \"\",\n      imgSrc: null,\n      imgBase64: null,\n      response: {},\n      showSpin: false,\n      API: \"https://flask-app-back.herokuapp.com/upload\"\n    }\n  },\n  methods: {\n    \n    readURL(event) {\n        this.selectedImg = event.target.files[0]\n        console.log(this.selectedImg)\n        this.imgName = this.selectedImg.name\n        this.imgSrc = URL.createObjectURL(this.selectedImg)\n    },\n    async postImg() {\n        if (this.selectedImg !== null) {\n            this.showSpin = true\n            this.fileEmpty = false\n            const reader = new FileReader()\n            reader.readAsDataURL(this.selectedImg)\n            reader.onloadend = () => {\n                this.imgBase64 = reader.result\n                let data = {\"base64\": this.imgBase64}\n                // console.log(data)\n                axios.post(this.API, data)\n                .then((response)=>{\n                    this.response = response.data\n                    console.log(this.response)\n                    this.showSpin = false\n                    this.selectedImg = null\n                })\n                .catch((error)=>{\n                    console.log(error())\n                })\n            }\n        } else {\n            this.fileEmpty = true\n        }\n        \n    }\n\n    \n  }\n}\n</script>\n\n<style>\n\n#upload {\n    opacity: 0;\n}\n\n#upload-label {\n    position: absolute;\n    top: 50%;\n    left: 1rem;\n    transform: translateY(-50%);\n}\n\n.image-area {\n    border: 2px dashed rgba(255, 255, 255, 0.7);\n    padding: 1rem;\n    position: relative;\n}\n\n.image-area::before {\n    content: 'Uploaded image result';\n    color: #fff;\n    font-weight: bold;\n    text-transform: uppercase;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 0.8rem;\n    z-index: 1;\n}\n\n.image-area img {\n    z-index: 2;\n    position: relative;\n}\n\nbody {\n    min-height: 100vh;\n    background-color: #757f9a;\n    background-image: linear-gradient(147deg, #757f9a 0%, #d7dde8 100%);\n}\n\n\n</style>"]}]}